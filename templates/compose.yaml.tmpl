services:

{{- if eq .Database "postgres" }}
  postgres:
    image: postgres:${POSTGRES_TAG}
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: alfresco
      POSTGRES_DB: alfresco
      PGUSER: alfresco
    command: postgres -c max_connections=300 -c log_min_messages=LOG
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "database").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "database").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "database").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "database").Reservations.MiB }}'
    volumes:
  {{- if .UseDockerVolume }}    
      - postgres-data:/var/lib/postgresql/data
  {{- else }}
      - ./data/postgres:/var/lib/postgresql/data
  {{- end }}
{{- end }}
{{- if eq .Database "mariadb" }}
  mariadb:
    image: mariadb:${MARIADB_TAG}
    environment:
        - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        - MYSQL_DATABASE=alfresco
        - MYSQL_USER=alfresco
        - MYSQL_PASSWORD=${DB_PASSWORD}
    command: "
        --character-set-server=utf8
        --collation-server=utf8_bin
        --lower_case_table_names=1
        --max_connections=200
        --innodb-flush-method=O_DIRECT
        --wait_timeout=28800"
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "database").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "database").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "database").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "database").Reservations.MiB }}'
    volumes:
  {{- if .UseDockerVolume }}    
        - mariadb-data:/var/lib/mysql
  {{- else }}
        - ./data/mariadb:/var/lib/mysql 
  {{- end}}
{{- end }}

{{- if .UseActiveMQ }}
  activemq:
    image: docker.io/alfresco/alfresco-activemq:${ACTIVEMQ_TAG}
    environment:
{{- if .AmqUser }}
      ACTIVEMQ_ADMIN_LOGIN: ${ACTIVEMQ_ADMIN_USER}
{{- end }}
{{- if .AmqPassword }}
      ACTIVEMQ_ADMIN_PASSWORD: ${ACTIVEMQ_ADMIN_PASSWORD}
{{- end }}      
    healthcheck:
{{- if .AmqUser }}    
      test: ["CMD", "curl", "-f", "--user", "${ACTIVEMQ_ADMIN_USER}:${ACTIVEMQ_ADMIN_PASSWORD}", "http://localhost:8161/admin"]
{{- else }}
      test: ["CMD", "curl", "-f", "http://localhost:8161/admin"]
{{- end }}      
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "activemq").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "activemq").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "activemq").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "activemq").Reservations.MiB }}'
    volumes:
  {{- if .UseDockerVolume }}
      - activemq-data:/opt/activemq/data
  {{- else }}
      - ./data/activemq:/opt/activemq/data
  {{- end }}
{{- end }}
  
  transform-core-aio:
    image: docker.io/alfresco/alfresco-transform-core-aio:${TRANSFORM_TAG}
    environment:
{{- if .UseActiveMQ }}
      ACTIVEMQ_URL: nio://activemq:61616
  {{- if .AmqUser }}
      ACTIVEMQ_USER: ${ACTIVEMQ_ADMIN_USER}
  {{- end }}
  {{- if .AmqPassword }}
      ACTIVEMQ_PASSWORD: ${ACTIVEMQ_ADMIN_PASSWORD}
  {{- end }}      
{{- end }}
      JAVA_OPTS: >-
        -Dserver.tomcat.threads.min=4        
        -Dserver.tomcat.threads.max=12
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/transform/config"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "transform-core-aio").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "transform-core-aio").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "transform-core-aio").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "transform-core-aio").Reservations.MiB }}'
{{- if .UseActiveMQ }}
    depends_on: 
      activemq:
        condition: service_healthy
{{- end }}

{{- if hasAddon "alf-tengine-ocr" }}
  transform-ocr:
    image: angelborroy/alfresco-tengine-ocr:1.0.0
    environment:
  {{- if .UseActiveMQ }}
      ACTIVEMQ_URL: nio://activemq:61616
    {{- if .AmqUser }}
      ACTIVEMQ_USER: ${ACTIVEMQ_ADMIN_USER}
    {{- end }}
    {{- if .AmqPassword }}
      ACTIVEMQ_PASSWORD: ${ACTIVEMQ_ADMIN_PASSWORD}
    {{- end }}      
  {{- end }}
      JAVA_OPTS: "
          -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
          -Dserver.tomcat.threads.max=4
          -Dserver.tomcat.threads.min=1
        "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/transform/config"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "transform-core-aio").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "transform-core-aio").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "transform-core-aio").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "transform-core-aio").Reservations.MiB }}'
  {{- if .UseActiveMQ }}
    depends_on: 
      activemq:
        condition: service_healthy
  {{- end }}
{{- end }}

  alfresco:
    build:
      context: ./alfresco
      args:
        REPO_TAG: ${REPO_TAG}
        SOLR_COMMS: {{ .SolrComm }}
{{- if eq .SolrComm "https" }}
        TRUSTSTORE_TYPE: JCEKS
        TRUSTSTORE_PASS: truststore
        KEYSTORE_TYPE: JCEKS
        KEYSTORE_PASS: keystore
        CERT_ALIAS: ssl.repo        
{{- end }}            
    environment:
      JAVA_TOOL_OPTIONS: >-
        -Dencryption.keystore.type=JCEKS
        -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
        -Dencryption.keyAlgorithm=DESede
        -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
        -Dmetadata-keystore.password=${METADATA_KEYSTORE_PASSWORD}
        -Dmetadata-keystore.aliases=metadata
        -Dmetadata-keystore.metadata.password=${METADATA_KEYSTORE_METADATA_PASSWORD}
        -Dmetadata-keystore.metadata.algorithm=DESede
{{- if eq .SolrComm "https" }}
        -Dssl-keystore.password=keystore
        -Dssl-keystore.aliases=ssl-alfresco-ca,ssl-repo
        -Dssl-keystore.ssl-alfresco-ca.password=keystore
        -Dssl-keystore.ssl-repo.password=keystore
        -Dssl-truststore.password=truststore
        -Dssl-truststore.aliases=alfresco-ca,ssl-repo-client
        -Dssl-truststore.alfresco-ca.password=truststore
        -Dssl-truststore.ssl-repo-client.password=truststore
{{- end }}                
      JAVA_OPTS: >-
        -Dalfresco.host=${SERVER_NAME}
        -Dalfresco.port={{ .Port }}
        -Dshare.host=${SERVER_NAME}
        -Dshare.port={{ .Port }}
        -Dalfresco_user_store.adminpassword=${ADMIN_PASSWORD}
        -Ddb.password=${DB_PASSWORD}
{{- if eq .Database "postgres" }}
        -Ddb.driver=org.postgresql.Driver
        -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
{{- end }}        
{{- if eq .Database "mariadb" }}
        -Ddb.driver=org.mariadb.jdbc.Driver
        -Ddb.url=jdbc:mysql://mariadb/alfresco?useUnicode=yes\&characterEncoding=UTF-8
{{- end }}
        -Dsolr.host=solr6
        -Dsolr.secureComms={{ .SolrComm }}
{{- if eq .SolrComm "secret" }}
        -Dsolr.sharedSecret=${SECURE_COMMS_SECRET}
{{- end }}
{{- if eq .SolrComm "https" }}
        -Dsolr.port.ssl=8983
        -Dsolr.baseUrl=/solr
        -Ddir.keystore=/usr/local/tomcat/keystore
        -Dalfresco.encryption.ssl.keystore.type=JCEKS
        -Dalfresco.encryption.ssl.truststore.type=JCEKS
{{- end }}
        -Dindex.subsystem.name=solr6
        -Dcsrf.filter.enabled=false
        -DlocalTransform.core-aio.url=http://transform-core-aio:8090/
{{- if hasAddon "alf-tengine-ocr" }}
        -DlocalTransform.ocr.url=http://transform-ocr:8090/
{{- end }}
{{- if .UseFtp }}
        -Dftp.enabled=true
        -Dftp.port=2121
        -Dftp.externalAddress=${SERVER_NAME}
        -Dftp.bindto=${BIND_IP_FTP:-0.0.0.0}
        -Dftp.dataPortFrom=2433
        -Dftp.dataPortTo=2434 
{{- end }}
{{- if .UseActiveMQ }}
        -Dmessaging.broker.url="failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true"
  {{- if .AmqUser }}
        -Dmessaging.broker.username=${ACTIVEMQ_ADMIN_USER}
  {{- end }}
  {{- if .AmqPassword }}
        -Dmessaging.broker.password=${ACTIVEMQ_ADMIN_PASSWORD}
  {{- end }}
{{- else }}
        -Dmessaging.subsystem.autoStart=false
        -Drepo.event2.enabled=false
{{- end }}
        -Ddeployment.method=DOCKER_COMPOSE
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 1m
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "alfresco").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "alfresco").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "alfresco").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "alfresco").Reservations.MiB }}'
    depends_on: 
{{- if eq .Database "postgres" }}
      postgres:
{{- end }}
{{- if eq .Database "mariadb" }}
      mariadb:
{{- end }}
        condition: service_healthy
{{- if .UseActiveMQ }}
      activemq:
        condition: service_healthy
{{- end }}
      transform-core-aio:
        condition: service_healthy
    volumes:
{{- if .UseDockerVolume }}    
      - alf-repo-data:/usr/local/tomcat/alf_data
{{- else }}
      - ./data/alfresco:/usr/local/tomcat/alf_data
{{- end }}
{{- if eq .Database "mariadb" }}
      - ./libs/mariadb-java-client-2.7.4.jar:/usr/local/tomcat/webapps/alfresco/WEB-INF/lib/mariadb-java-client-2.7.4.jar
{{- end }}
{{- if eq .SolrComm "https" }}
      - ./keystores/alfresco:/usr/local/tomcat/keystore
{{- end }}
{{- if .UseFtp }}
    ports:
      - ${BIND_IP_FTP:-0.0.0.0}:2121:2121
      - ${BIND_IP_FTP:-0.0.0.0}:2433:2433
      - ${BIND_IP_FTP:-0.0.0.0}:2434:2434
{{- end }}

  solr6:
    build:
      context: ./search
      args:
        SEARCH_TAG: ${SEARCH_TAG}
        SOLR_HOSTNAME: solr6
        ALFRESCO_HOSTNAME: alfresco
        ALFRESCO_COMMS: {{ .SolrComm }}
{{- if eq .SolrComm "https" }}
        TRUSTSTORE_TYPE: JCEKS
        KEYSTORE_TYPE: JCEKS
{{- end }}
        CROSS_LOCALE: {{ .IndexCrossLocale }}
        CONTENT_INDEXING: {{ .IndexContent }}
    environment:
      SOLR_ALFRESCO_HOST: "alfresco"
      SOLR_ALFRESCO_PORT: {{ if eq .SolrComm "secret" }} "8080" {{ else }} "8443" {{ end }}
      SOLR_SOLR_HOST: "solr6"
      SOLR_SOLR_PORT: "8983"
      SOLR_CREATE_ALFRESCO_DEFAULTS: "alfresco"
      ALFRESCO_SECURE_COMMS: "{{ .SolrComm }}"
{{- if eq .SolrComm "https" }}
      SOLR_SSL_TRUST_STORE: "/opt/alfresco-search-services/keystore/ssl-repo-client.truststore"
      SOLR_SSL_TRUST_STORE_PASSWORD: "truststore"
      SOLR_SSL_TRUST_STORE_TYPE: "JCEKS"
      SOLR_SSL_KEY_STORE: "/opt/alfresco-search-services/keystore/ssl-repo-client.keystore"
      SOLR_SSL_KEY_STORE_PASSWORD: "keystore"
      SOLR_SSL_KEY_STORE_TYPE: "JCEKS"
      SOLR_SSL_NEED_CLIENT_AUTH: "true"
      JAVA_TOOL_OPTIONS: >-
          -Dsolr.jetty.truststore.password=truststore
          -Dsolr.jetty.keystore.password=keystore
          -Dssl-keystore.password=keystore
          -Dssl-keystore.aliases=ssl-alfresco-ca,ssl-repo-client
          -Dssl-keystore.ssl-alfresco-ca.password=keystore
          -Dssl-keystore.ssl-repo-client.password=keystore
          -Dssl-truststore.password=truststore
          -Dssl-truststore.aliases=ssl-alfresco-ca,ssl-repo,ssl-repo-client
          -Dssl-truststore.ssl-alfresco-ca.password=truststore
          -Dssl-truststore.ssl-repo.password=truststore
          -Dssl-truststore.ssl-repo-client.password=truststore   
{{- end }}
      SOLR_OPTS: >-
{{- if eq .SolrComm "secret" }}
        -Dalfresco.secureComms.secret=${SECURE_COMMS_SECRET}
{{- end }}        
{{- if eq .SolrComm "https" }}
        -Dsolr.ssl.checkPeerName=false
        -Dsolr.allow.unsafe.resourceloading=true
{{- end }}        
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "solr6").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "solr6").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "solr6").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "solr6").Reservations.MiB }}'
    depends_on:
      alfresco:
        condition: service_healthy
    volumes:
{{- if .UseDockerVolume }}    
      - solr-data:/opt/alfresco-search-services/data
{{- else }}
      - ./data/solr:/opt/alfresco-search-services/data
{{- end }}
{{- if eq .SolrComm "https" }}
      - ./keystores/solr:/opt/alfresco-search-services/keystore
{{- end }}      

  share:
    build:
      context: ./share
      args:
        SHARE_TAG: ${SHARE_TAG}
    environment:
      REPO_HOST: "alfresco"
      REPO_PORT: "8080"
      CSRF_FILTER_REFERER: "http://${SERVER_NAME}:{{ .Port }}/.*"
      CSRF_FILTER_ORIGIN: "http://${SERVER_NAME}:{{ .Port }}"
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "share").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "share").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "share").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "share").Reservations.MiB }}'
    depends_on: 
      alfresco:
        condition: service_healthy

  content-app:
    image: docker.io/alfresco/alfresco-content-app:${CONTENT_APP_TAG}
    environment:
      APP_BASE_SHARE_URL: "http://${SERVER_NAME}:{{ .Port }}/content-app/#/preview/s"
      APP_CONFIG_PLUGIN_PROCESS_SERVICE: false
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "content-app").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "content-app").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "content-app").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "content-app").Reservations.MiB }}'
    depends_on: 
      alfresco:
        condition: service_healthy

  control-center:
    image: quay.io/alfresco/alfresco-control-center:${CONTROL_CENTER_TAG}
    environment:
      APP_CONFIG_PROVIDER: "ECM"
      APP_CONFIG_AUTH_TYPE: "BASIC"
      BASE_PATH: ./
      APP_CONFIG_PLUGIN_LEGAL_HOLD: false
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "control-center").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "control-center").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "control-center").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "control-center").Reservations.MiB }}'
    depends_on: 
      alfresco:
        condition: service_healthy

  proxy:
    image: docker.io/library/nginx:stable-alpine
    deploy:
      resources:
        limits:
          cpus: '{{ printf "%.2f" (index .Resources "proxy").Limits.CPU }}'
          memory: '{{ formatMem (index .Resources "proxy").Limits.MiB }}'
        reservations:
          cpus: '{{ printf "%.2f" (index .Resources "proxy").Reservations.CPU }}'
          memory: '{{ formatMem (index .Resources "proxy").Reservations.MiB }}'
    depends_on:
      share:
        condition: service_started
      content-app:
        condition: service_started
      control-center:
        condition: service_started
      alfresco:
        condition: service_started
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf        
    ports:
      - ${BIND_IP_NGINX:-0.0.0.0}:{{ .Port }}:{{ .Port }}

{{ if .UseDockerVolume }}
volumes:
  {{- if .UseActiveMQ }}
  activemq-data:
  {{- end }}  
  {{- if eq .Database "postgres" }}
  postgres-data:
  {{- end }}
  {{- if eq .Database "mariadb" }}
  mariadb-data:
  {{- end }}
  alf-repo-data:
  solr-data:
{{- end }}